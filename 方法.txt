方法
		是将具有独立功能的代码块组织成为一个整体，使其具有特殊功能的代码集

		格式 ：
				public static void 方法名() {      //public static 为修饰符
					//方法体
				}


1、方法调用
			
			格式： 方法名();

3、带参数方法的定义和调用 
			
			格式： public static void 方法名(参数){...}

			格式： public static void 方法名(数据类型 变量名){...}	

4、形参和实参

5、带返回值方法的定义和调用

	格式： public static 数据类型 方法名(参数) {
		return 数据;
	}	

	//方法定义时return后面的返回值与方法定义上的数据类型要匹配，否则程序将报错				
							
6、注意事项：
		
		方法不能嵌套

		void表示无返回值，可以省略return，也可以单独的书写return，后面不加数据

		return用来结束方法							

7、方法重载
		
		相同一个类中定义的多个方法之间的关系，满足下列条件的多个方法相互构成重载

			条件：多个方法在同一个类中
				  多个方法具有相同的方法名
				  多个方法的参数不相同，类型不同或者数量不同			

			注：  与返回值无关
				  在调用的时候，java虚拟机会通过参数的不同来区分同名的方法	

8、方法的参数传递
		
		(基本类型)
		对于基本数据类型的参数，形式参数的改变，不影响实际参数的值。 
		
		(引用类型)
		对于引用类型的参数，形式参数的改变，影响实际参数的值
		eg：数组，堆内存的实际参数会被方法里的参数改变

9、Debug使用
		
		是供程序员使用的程序调试工具，可以查看程序的执行流程，也可以用于追踪程序执行过程来调试程序。 

		查看方法调用的执行流程 //如果数据来自于键盘输入，只有输入完才可以继续查看

